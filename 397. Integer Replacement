class Solution {
    public int integerReplacement(int n) {
       int count = 0;
if (n == 2147483647) {
	n = 1073741824;
	count = 2;
//            this is exceptional case where I was stuck during leetCode submission so i hardcode it
//            2147483647 --> it is max number in integer type so if we increase 1 then it is out of range.
//            2147483647 + 1 = 2147483648 -->count 1
//            2147483648 / %4 == 0 --> 2147483648 / 2 = 1073741824 -> count = 2;
}

while (n != 1) {
	if (n == 3 || n % 2 == 1 && (n - 1) % 4 == 0)
		n -= 1;
//            if(n%2)==1 means n is odd, also if(n-1)%4==0 means (n-1)/2 is also even
//            i.e n=21--> if(n%2)==1 than n=21 is odd, also if(n-1)%4==0 than (21-)1=20, 20/2=10 is also even.
//            so we can directly make n-->n-1

	else if (n % 2 == 1)
		n += 1;
//            if((n - 1) % 4 == 0) doesn't fulfill then below condition we add n-->n+1

	else
		n /=2;
//            else if n is already even than directly n-->n/2

	count++;
//            for each step we increase our count with +1
}
return count; 
    }
}
