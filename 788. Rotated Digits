class Solution {
     int gc = -1; //gamechanger 
     int gs = -1; //gamestopper 
    public int rotatedDigits(int n) {

        int dp[] = {4,4,7,0,0,7,7,0,4,7}; //4-Rotated+Same , 7-Rotated+Different
        String sn = String.valueOf(n);
        int d = sn.length();int k=0;int sum = 0;String old = "" , s="";
        while(k<d-1)
        {
            s = sn.substring(k);
            int baseSum = helper(Integer.valueOf(s),s,dp,old);
            sum+=baseSum;
            k=k+1;
            old = s;
        }
        
        s = sn.substring(k);
        int fd = Character.getNumericValue(s.charAt(0));
        if(old.length()>1) //Not a 1 digit number
        {
            int pd = Character.getNumericValue(old.charAt(0));
            if(dp[pd]==7 && gs!=1)
                {
                    gc = 1;
                }
            else if(dp[pd]==0)
                {
                    gs = 1;
                }
        }
        
        for(int i=0;i<=fd;i++)
        {
            if((dp[i]==4 && gc==1 && gs!=1) || (dp[i]==7 && gs!=1))
            {
                    sum = sum+1;
            }
        }
        return sum;
    }

    public int helper(int n,String s,int dp[],String old)
    {
        
        int d = s.length();
        d=d-1;
        int power = 1;
        int sum = 4;
       
        for(int i=1;i<d;i++)
        {
            double tempCalc = sum*2 + ((sum+(Math.pow(3,power)))*4); 
                //4 , 7       => 2 digit
                //40 , 49     => 3 digit
                //316 , 349   => 4 digit 
            sum += tempCalc;
            power++;
        }
        //System.out.println("Sum = "+sum);
    
        int initial = 0;
        int baseSum = sum;
        int fd = Character.getNumericValue(s.charAt(0));
        int pd = -1;
        fd = fd-1;
        if(old.equals(""))
        {
            initial = 1;
        }
        else 
        {
            sum = 0;
            pd = Character.getNumericValue(old.charAt(0));
            if(dp[pd]==7 && gs!=1)
            {
                gc = 1;
            }
            else if(dp[pd]==0)
            {
                gs = 1;
            }
        }
        for(int i=initial;i<=fd;i++)
        {
                if(i==3 || i==4 || i==7 || gs==1)
                {
                    continue;
                }
                else if(dp[i]==7 || gc==1)
                {
                    sum += baseSum+(Math.pow(3,power));
                }
                else if(dp[i]==4)
                {
                    sum += baseSum;
                }
        }
        //System.out.println("Remaining Sum = "+sum);
        return sum;
    }

}
