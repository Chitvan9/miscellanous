class Solution {
    int arr[][] = new int[1001][1001];
    public String shortestCommonSupersequence(String text1, String text2) {
        int l = text1.length(), l2 = text2.length();
        for (int i = 1; i <= l; i++) {
            for (int j = 1; j <= l2; j++) {
                arr[i][j] = -1;
            }
        }
        int x = l + l2 - maxi(text1, text2, l, l2);
        String ans = "";
        int i = l, j = l2;
        while (i > 0 && j > 0) {
            if (text1.charAt(i - 1) == text2.charAt(j - 1)) {
                ans = "" + text1.charAt(i - 1) + ans;
                i--;
                j--;
            } else if (arr[i - 1][j] > arr[i][j - 1]) {
                ans = "" + text1.charAt(i - 1) + ans;
                i--;
            } else {
                ans = "" + text2.charAt(j - 1) + ans;
                j--;
            }
        }
        while (i > 0) {
            ans = "" + text1.charAt(i - 1) + ans;
            i--;
        }
        while (j > 0) {
            ans = "" + text2.charAt(j - 1) + ans;
            j--;
        }
        return ans;

    }
        //PLEASE UPVOTE.

    public int maxi(String s, String s2, int l, int l2) {
        if (l == 0 || l2 == 0)
            return 0;
        if (arr[l][l2] != -1)
            return arr[l][l2];

        if (s.charAt(l - 1) == s2.charAt(l2 - 1)) {
            arr[l][l2] = 1 + maxi(s, s2, l - 1, l2 - 1);
            return arr[l][l2];
        }
        return arr[l][l2] = Math.max(maxi(s, s2, l, l2 - 1), maxi(s, s2, l - 1, l2));
    }
}
